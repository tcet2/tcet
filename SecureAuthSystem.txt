import java.security.MessageDigest;
import java.util.HashMap;
import java.util.Scanner;

public class SecureAuthSystem {

    // Simulated database (username -> hashed password)
    static HashMap<String, String> users = new HashMap<>();

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Register a user
        System.out.print("Register Username: ");
        String regUser = scanner.nextLine();
        System.out.print("Register Password: ");
        String regPass = scanner.nextLine();

        String hashedPassword = hashPassword(regPass);
        users.put(regUser, hashedPassword);
        System.out.println("User registered successfully!\n");

        // Login phase
        System.out.print("Login Username: ");
        String loginUser = scanner.nextLine();
        System.out.print("Login Password: ");
        String loginPass = scanner.nextLine();

        String loginHashed = hashPassword(loginPass);

        if (users.containsKey(loginUser) && users.get(loginUser).equals(loginHashed)) {
            System.out.println("Access granted. Welcome, " + loginUser + "!");
        } else {
            System.out.println("Access denied. Invalid credentials.");
        }

        scanner.close();
    }

    // Hash function using SHA-256
    public static String hashPassword(String password) {
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            byte[] hashBytes = md.digest(password.getBytes());
            StringBuilder sb = new StringBuilder();
            for (byte b : hashBytes) {
                sb.append(String.format("%02x", b)); // convert byte to hex
            }
            return sb.toString();
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }
}
